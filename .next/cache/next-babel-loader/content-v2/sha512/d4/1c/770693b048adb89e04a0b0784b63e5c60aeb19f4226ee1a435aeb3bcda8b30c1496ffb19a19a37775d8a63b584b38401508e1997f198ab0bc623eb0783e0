{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/Stuart/workspace/use-calendar/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Container, Flex, IconButton, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport DateFnsAdapter from \"@date-io/date-fns\";\nimport addDays from \"date-fns/addDays\";\nimport addMonths from \"date-fns/addMonths\";\nimport format from \"date-fns/format\";\nimport isSameDay from \"date-fns/isSameDay\";\nimport enGB from \"date-fns/locale/en-GB\";\nimport enUS from \"date-fns/locale/en-US\";\nimport es from \"date-fns/locale/es\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport useCalendar from \"src/use-calendar\";\nvar locales = {\n  \"en-GB\": enGB,\n  \"en-US\": enUS,\n  es: es\n};\nvar events = [{\n  title: \"Today\",\n  start: new Date()\n}, {\n  title: \"Today\",\n  start: new Date()\n}, {\n  title: \"Tomorrow\",\n  start: addDays(new Date(), 1)\n}];\n\nvar Calendar = function Calendar(_ref) {\n  _s();\n\n  var d = _ref.d;\n  var router = useRouter();\n  var defaultDate = new Date(d);\n  var locale = locales[router.locale];\n  var dateUtils = new DateFnsAdapter({\n    locale: locale\n  });\n  var calendar = useCalendar({\n    dateUtils: dateUtils,\n    defaultDate: defaultDate\n  });\n\n  var handlePrevClick = function handlePrevClick() {\n    var d = format(addMonths(calendar.date, -1), \"yyyy-MM\");\n    router.replace(\"?d=\".concat(d), undefined, {\n      shallow: true\n    });\n    calendar.navigatePrev();\n  };\n\n  var handleNextClick = function handleNextClick() {\n    var d = format(addMonths(calendar.date, 1), \"yyyy-MM\");\n    router.replace(\"?d=\".concat(d), undefined, {\n      shallow: true\n    });\n    calendar.navigateNext();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"lg\",\n    py: 8,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"white\",\n      overflow: \"hidden\",\n      borderRadius: \"lg\",\n      borderWidth: \"1px\",\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        py: 4,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Prev\",\n          icon: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            boxSize: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, _this),\n          onClick: handlePrevClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Text, {\n          width: \"200px\",\n          fontWeight: \"bold\",\n          textAlign: \"center\",\n          textTransform: \"uppercase\",\n          children: calendar.month.monthAndYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Next\",\n          icon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n            boxSize: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, _this),\n          onClick: handleNextClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: 7,\n        children: [calendar.weekdays.map(function (_ref2, i) {\n          var weekdayShort = _ref2.weekdayShort;\n          return /*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"center\",\n            p: 2,\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"sm\",\n              fontWeight: \"bold\",\n              textTransform: \"uppercase\",\n              children: weekdayShort\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, _this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, _this);\n        }), calendar.days.map(function (day, i) {\n          return /*#__PURE__*/_jsxDEV(Flex, {\n            p: 1,\n            minHeight: \"100px\",\n            flexDirection: \"column\",\n            bg: day.isOutsideMonth ? \"gray.50\" : \"white\",\n            borderColor: \"gray.200\",\n            borderTopWidth: \"1px\",\n            borderRightWidth: (i + 1) % 7 === 0 ? \"0px\" : \"1px\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              flex: 1,\n              width: \"100%\",\n              fontSize: \"sm\",\n              textAlign: \"right\",\n              fontWeight: day.isToday ? \"bold\" : \"normal\",\n              children: day.dayOfMonth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, _this), events.filter(function (ev) {\n              return isSameDay(ev.start, day.date);\n            }).map(function (ev) {\n              return /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"xs\",\n                  colorScheme: \"blue\",\n                  isFullWidth: true,\n                  children: ev.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, _this);\n            })]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Calendar, \"wyRLliPpMyEkQHhllT4OZe4dacU=\", false, function () {\n  return [useRouter, useCalendar];\n});\n\n_c = Calendar;\nexport var __N_SSP = true;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/Stuart/workspace/use-calendar/pages/index.tsx"],"names":["ChevronLeftIcon","ChevronRightIcon","Box","Button","Container","Flex","IconButton","SimpleGrid","Text","DateFnsAdapter","addDays","addMonths","format","isSameDay","enGB","enUS","es","useRouter","React","useCalendar","locales","events","title","start","Date","Calendar","d","router","defaultDate","locale","dateUtils","calendar","handlePrevClick","date","replace","undefined","shallow","navigatePrev","handleNextClick","navigateNext","month","monthAndYear","weekdays","map","i","weekdayShort","days","day","isOutsideMonth","isToday","dayOfMonth","filter","ev"],"mappings":"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","sourcesContent":["import { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Container,\n  Flex,\n  IconButton,\n  SimpleGrid,\n  Text,\n} from \"@chakra-ui/react\";\nimport DateFnsAdapter from \"@date-io/date-fns\";\nimport addDays from \"date-fns/addDays\";\nimport addMonths from \"date-fns/addMonths\";\nimport format from \"date-fns/format\";\nimport isSameDay from \"date-fns/isSameDay\";\nimport isValid from \"date-fns/isValid\";\nimport enGB from \"date-fns/locale/en-GB\";\nimport enUS from \"date-fns/locale/en-US\";\nimport es from \"date-fns/locale/es\";\nimport { GetServerSideProps, NextPage } from \"next\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport useCalendar from \"src/use-calendar\";\n\nconst locales = {\n  \"en-GB\": enGB,\n  \"en-US\": enUS,\n  es,\n};\n\nconst events = [\n  {\n    title: \"Today\",\n    start: new Date(),\n  },\n  {\n    title: \"Today\",\n    start: new Date(),\n  },\n  {\n    title: \"Tomorrow\",\n    start: addDays(new Date(), 1),\n  },\n];\n\ninterface Props {\n  d: string;\n}\n\nconst Calendar: NextPage<Props> = ({ d }) => {\n  const router = useRouter();\n  const defaultDate = new Date(d);\n  const locale = locales[router.locale];\n  const dateUtils = new DateFnsAdapter({ locale });\n  const calendar = useCalendar({ dateUtils, defaultDate });\n\n  const handlePrevClick = () => {\n    const d = format(addMonths(calendar.date, -1), \"yyyy-MM\");\n    router.replace(`?d=${d}`, undefined, { shallow: true });\n    calendar.navigatePrev();\n  };\n\n  const handleNextClick = () => {\n    const d = format(addMonths(calendar.date, 1), \"yyyy-MM\");\n    router.replace(`?d=${d}`, undefined, { shallow: true });\n    calendar.navigateNext();\n  };\n\n  return (\n    <Container maxW=\"lg\" py={8}>\n      <Box bg=\"white\" overflow=\"hidden\" borderRadius=\"lg\" borderWidth=\"1px\">\n        <Flex alignItems=\"center\" justifyContent=\"center\" py={4}>\n          <IconButton\n            aria-label=\"Prev\"\n            icon={<ChevronLeftIcon boxSize={8} />}\n            onClick={handlePrevClick}\n          />\n          <Text\n            width=\"200px\"\n            fontWeight=\"bold\"\n            textAlign=\"center\"\n            textTransform=\"uppercase\"\n          >\n            {calendar.month.monthAndYear}\n          </Text>\n          <IconButton\n            aria-label=\"Next\"\n            icon={<ChevronRightIcon boxSize={8} />}\n            onClick={handleNextClick}\n          />\n        </Flex>\n        <SimpleGrid columns={7}>\n          {calendar.weekdays.map(({ weekdayShort }, i) => (\n            <Flex key={i} justifyContent=\"center\" p={2}>\n              <Text fontSize=\"sm\" fontWeight=\"bold\" textTransform=\"uppercase\">\n                {weekdayShort}\n              </Text>\n            </Flex>\n          ))}\n          {calendar.days.map((day, i) => (\n            <Flex\n              key={i}\n              p={1}\n              minHeight=\"100px\"\n              flexDirection=\"column\"\n              bg={day.isOutsideMonth ? \"gray.50\" : \"white\"}\n              borderColor=\"gray.200\"\n              borderTopWidth=\"1px\"\n              borderRightWidth={(i + 1) % 7 === 0 ? \"0px\" : \"1px\"}\n            >\n              <Text\n                flex={1}\n                width=\"100%\"\n                fontSize=\"sm\"\n                textAlign=\"right\"\n                fontWeight={day.isToday ? \"bold\" : \"normal\"}\n              >\n                {day.dayOfMonth}\n              </Text>\n              {events\n                .filter((ev) => isSameDay(ev.start, day.date))\n                .map((ev) => (\n                  <Box>\n                    <Button size=\"xs\" colorScheme=\"blue\" isFullWidth>\n                      {ev.title}\n                    </Button>\n                  </Box>\n                ))}\n            </Flex>\n          ))}\n        </SimpleGrid>\n      </Box>\n    </Container>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const date = new Date(String(context.query.d));\n\n  return {\n    props: {\n      d: format(isValid(date) ? date : new Date(), \"yyyy-MM\"),\n    },\n  };\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}